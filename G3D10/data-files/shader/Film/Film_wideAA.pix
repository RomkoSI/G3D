#version 330
#include <compatibility.glsl>
#include <Texture/Texture.glsl>

uniform float     radius;
uniform_Texture(sampler2D, sourceTexture_);

in vec2 g3d_TexCoord;
out vec4 result;

void main() {
    vec2 coord = g3d_TexCoord.st;

    // This explicit correction to half-pixel positions is needed when rendering to the hardware frame buffer
    // but not when rendering to a texture.
    coord = (floor(coord * sourceTexture_size.xy) + float2(0.5, 0.5)) * sourceTexture_invSize.xy;

    // Store the negatives in zw
    float4 offset = float4(radius * sourceTexture_invSize.xy, 0, 0);
    offset.zw = -offset.xy;

    // Average four texels
    result.rgb = 
        0.25 * (
            // +, +
            textureLod(sourceTexture_buffer, coord + offset.xy, 0).rgb + 
            // +, -
            textureLod(sourceTexture_buffer, coord + offset.xw, 0).rgb + 
            // -, +
            textureLod(sourceTexture_buffer, coord + offset.zy, 0).rgb + 
            // -, -
            textureLod(sourceTexture_buffer, coord + offset.zw, 0).rgb);
}
