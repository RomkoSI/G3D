#version 330 or 420 compatibility// -*- c++ -*-
/**
 \file UniversalSurface_gbuffer.vrt
 \author Morgan McGuire
 \created 2007-10-22
 \edited  2016-02-23 
 */
#include <UniversalSurface/UniversalSurface_vertex.glsl>

#expect HAS_BONES


#if HAS_BONES > 0
    in vec4      g3d_BoneWeights;
    in ivec4     g3d_BoneIndices;
    uniform sampler2D   boneMatrixTexture;
#   if defined(CS_POSITION_CHANGE) || defined(SS_POSITION_CHANGE) || defined(SS_EXPRESSIVE_MOTION)
        uniform sampler2D   prevBoneMatrixTexture;
#   endif
#endif

#if defined(CS_POSITION_CHANGE) || defined(SS_POSITION_CHANGE)
    uniform mat4x3  PreviousObjectToCameraMatrix;
    out layout(location=7) vec3 csPrevPosition;
#endif

#if defined(SS_EXPRESSIVE_MOTION)
    uniform mat4x3  ExpressivePreviousObjectToCameraMatrix;
    out layout(location=8) vec3 csExpressivePrevPosition;
#endif


void main(void) {
    // Temporary variables needed because some drivers do not allow modifying attribute variables directly
    vec4 vertex         = g3d_Vertex;
    vec3 normal         = g3d_Normal;
    vec4 packedTangent  = g3d_PackedTangent;
    vec2 tex0           = g3d_TexCoord0;
    vec2 tex1           = vec2(0);
#   if defined(NUM_LIGHTMAP_DIRECTIONS) && (NUM_LIGHTMAP_DIRECTIONS > 0)
        tex1 = g3d_TexCoord1;
#   endif

    UniversalSurface_customOSVertexTransformation(vertex, normal, packedTangent, tex0, tex1);

#   if (defined(CS_POSITION_CHANGE) || defined(SS_POSITION_CHANGE) || defined(SS_EXPRESSIVE_MOTION)) && (HAS_BONES > 0)
        // For expressive motion, still use the same previous bone matrix texture to avoid
        // additional computation (since it is expressive anyway!)
        mat4 prevBoneTransform = UniversalSurface_getFullBoneTransform(g3d_BoneWeights, g3d_BoneIndices, prevBoneMatrixTexture);
#   endif

#   if defined(CS_POSITION_CHANGE) || defined(SS_POSITION_CHANGE)
#       if HAS_BONES > 0
            csPrevPosition = (PreviousObjectToCameraMatrix * (prevBoneTransform * vertex)).xyz;
#       else
            csPrevPosition = (PreviousObjectToCameraMatrix * vertex).xyz;
#       endif
#   endif

#   if defined(SS_EXPRESSIVE_MOTION)
#       if HAS_BONES > 0
            csExpressivePrevPosition = (ExpressivePreviousObjectToCameraMatrix * (prevBoneTransform * vertex)).xyz;
#       else
            csExpressivePrevPosition = (ExpressivePreviousObjectToCameraMatrix * vertex).xyz;
#       endif
#   endif

#   if HAS_BONES > 0
        // This mutates vertex, normal, and packedTangent
        UniversalSurface_boneTransform(g3d_BoneWeights, g3d_BoneIndices, boneMatrixTexture, vertex, normal, packedTangent);
#   endif

    UniversalSurface_transform(vertex, normal, packedTangent, tex0, tex1,
#       if HAS_VERTEX_COLOR
            g3d_VertexColor
#       else
            vec4(0)
#       endif
        );
}
