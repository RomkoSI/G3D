#version 330 // -*- c++ -*-

#include <reconstructFromDepth.glsl>
#include <Texture/Texture.glsl>
uniform_Texture(sampler2D, normal_);
uniform_Texture(sampler2D, csZ_);

#expect FAR_PLANE_Z "(negative) z-coordinate of the far plane"

//uniform float nearZ;
//uniform float farZ;

out vec4 result;
#include <AmbientOcclusion/AmbientOcclusion_constants.glsl>
#include <AmbientOcclusion/AmbientOcclusion_packBilateralKey.glsl>

void main() {
    ivec2 ssC   = ivec2(gl_FragCoord.xy);
    float csZ   = texelFetch(csZ_buffer, ssC, 0).r;
    vec3 normal = texelFetch(normal_buffer, ssC, 0).xyz * normal_readMultiplyFirst.xyz + normal_readAddSecond.xyz;
    result      = packBilateralKey(csZ, normal, 0.0, FAR_PLANE_Z);
    //result = vec2(1.0, 1.0);
}
