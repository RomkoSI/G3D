#version 410 // -*- c++ -*-

in vec3 position;
in vec3 normal;
in vec2 texCoord;
in vec4 tangent;

out Varying {
    vec3 normal;
    vec2 texCoord;
    vec3 position;
} vertexOutput;

uniform mat3x3 objectToWorldNormalMatrix;
uniform mat4x4 objectToWorldMatrix;
uniform mat4x4 modelViewProjectionMatrix;

void main () {
    vertexOutput.texCoord   = texCoord;
    vertexOutput.normal     = normalize(objectToWorldNormalMatrix * normal);
    vertexOutput.position   = (objectToWorldMatrix * vec4(position, 1.0)).xyz;

    gl_Position = modelViewProjectionMatrix * vec4(position, 1.0);
}
