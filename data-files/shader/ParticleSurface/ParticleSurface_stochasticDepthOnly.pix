#version 330 // -*- c++ -*-

#include <compatibility.glsl>
#include <g3dmath.glsl>
#include <UniversalMaterial/UniversalMaterial.glsl>
#include <UniversalMaterial/UniversalMaterial_sample.glsl>

uniform UniversalMaterial2D material;

// This reduces the darkness of stochastic shadows cast by particle systems,
// which tends to improve their overall appearance.
const float shadowCastingFactor = 0.25;

in Point3                   wsPosition;
in Point3                   texCoord;

float random(Point3 p) {
    return frac(sin(p.x * 1e2 + p.y) * 1e5 + sin(p.y * 1e3 + p.z * 1e2) * 1e3);
}

void main() {
    // TODO: use 2DArray texcoord
    float alpha = sampleTexture(material.lambertian, texCoord.xy).a;

    // Selectively kill based on a random number vs. alpha.
    if (random(wsPosition.xyz) > alpha * shadowCastingFactor) {
        discard;
    }
}
