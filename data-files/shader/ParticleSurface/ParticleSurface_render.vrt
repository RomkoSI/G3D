#version 330 // -*- c++ -*-
#include <g3dmath.glsl>

/** x,y,z, angle */
in float4 position;

/** radius, coverage, userdata */
in float3 shape;

/** material layer index, texelWidth, flags, userdataInt */
in int4 materialProperties;

/** World-space position of the center of the photon */
layout(location = 0) out Point3  wsCenterVertexOutput;

/** Radius of the bounding shape */
layout(location = 1) out float3  shapeVertexOutput;
layout(location = 2) out int4    materialPropertiesVertexOutput;
layout(location = 3) out float   angleVertexOutput;

void main() {
    angleVertexOutput           = position[3];
    shapeVertexOutput           = shape;
    materialPropertiesVertexOutput = materialProperties;

    // Undo gamma compression
    wsCenterVertexOutput        = position.xyz;
    gl_Position                 = float4(g3d_WorldToCameraMatrix * float4(position.xyz, 1.0), 1.0);
}
